{"version":3,"sources":["components/editor/Editor.module.scss","components/catalog-item/CatalogItem.module.scss","components/catalog/Catalog.module.scss","components/layers/Layers.module.scss","components/sidebar/Sidebar.module.scss","components/canvas/Canvas.module.scss","components/placeholder/Placeholder.module.scss","components/sandbox/Sandbox.module.scss","components/editor/Editor.jsx","components/catalog-item/CatalogItem.jsx","components/catalog/Catalog.jsx","components/layers/Layers.jsx","components/sidebar/Sidebar.jsx","react-fiber/react-fiber.js","context/DispatchContext.js","generators/workspace/workspace-generator.jsx","components/canvas/Canvas.jsx","plugins/imports.js","components/placeholder/Placeholder.jsx","reducer/initial-state/initialState.js","tree-parser/tree-parser.js","generators/example/example-generator.js","reducer/replace/replace.js","reducer/select/select.js","reducer/reducer.js","components/sandbox/Sandbox.jsx","index.jsx"],"names":["module","exports","cx","classNames","bind","styles","Editor","props","selected","className","CatalogItem","identifier","name","draggable","onDragStart","event","dataTransfer","setData","JSON","stringify","Catalog","useState","searchValue","setSearchValue","components","Object","keys","plugins","map","key","exportType","toLowerCase","indexOf","onChange","target","value","placeholder","type","Layers","height","setHeight","handleMouseMove","clientY","window","innerHeight","handleMouseUp","document","body","classList","remove","documentElement","style","cursor","removeEventListener","onMouseDown","button","addEventListener","role","Sidebar","width","setWidth","clientX","Fiber","node","id","fiberNode","match","return","length","find","startsWith","DispatchContext","React","createContext","WorkspaceGenerator","imports","config","root","component","importFrom","default","Component","import","properties","forEach","property","undefined","generate","console","log","Canvas","workspace","dispatch","useContext","selectNearestTarget","findNearest","useEffect","Placeholder","expand","dropped","setDropped","onDragOver","preventDefault","onDragEnter","onDrop","sandboxData","getData","parse","then","dynamicImport","replacement","catch","error","initialUUID","uuidv4","initialState","parent","TreeParser","tree","replaceNode","clone","nodes","prop","ExampleGenerator","configuration","example","replace","state","action","select","reducer","Sandbox","useReducer","locale","Provider","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2dea930c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"editor\":\"Editor_editor__2ZK6b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"catalog-item\":\"CatalogItem_catalog-item__1yJ-b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"catalog\":\"Catalog_catalog__gB0WM\",\"search\":\"Catalog_search__2Y6Ny\",\"input\":\"Catalog_input__1Hzgz\",\"components\":\"Catalog_components__xPgEm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layers\":\"Layers_layers__rrXTR\",\"resizer\":\"Layers_resizer__3c1N3\",\"inactive\":\"Layers_inactive__hyypz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__ybD5g\",\"resizer\":\"Sidebar_resizer__3_P5P\",\"inactive\":\"Sidebar_inactive__1W0Lr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"Canvas_canvas__XH7zY\",\"body\":\"Canvas_body__3F2s9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"placeholder\":\"Placeholder_placeholder__3FXn4\",\"expand\":\"Placeholder_expand__1Py8x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sandbox\":\"Sandbox_sandbox__oA_MS\",\"header\":\"Sandbox_header__3YzRS\",\"layout\":\"Sandbox_layout__625qo\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport styles from './Editor.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst propTypes = {\n  /**\n   * The identifier of the selected component.\n   */\n  selected: PropTypes.string,\n};\n\nconst Editor = (props) => {\n  const { selected } = props;\n\n  return (\n    <div className={cx('editor')}>\n      Editor Selected:\n      {' '}\n      {selected}\n    </div>\n  );\n};\n\nEditor.propTypes = propTypes;\n\nexport default Editor;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport styles from './CatalogItem.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst propTypes = {\n  /**\n   * The identifier of the component.\n   */\n  identifier: PropTypes.string,\n  /**\n   * The name of the component.\n   */\n  name: PropTypes.string,\n};\n\nconst CatalogItem = (props) => {\n  const { identifier, name } = props;\n\n  /**\n   * Handles the drag start event. Transfers component information.\n   * @param {Event} event - The drag start event.\n   */\n  const handleDragStart = (event) => {\n    event.dataTransfer.setData('terra-sandbox-data', JSON.stringify({ identifier }));\n  };\n\n  return (\n    <div className={cx('catalog-item')} draggable onDragStart={handleDragStart}>\n      {name}\n    </div>\n  );\n};\n\nCatalogItem.propTypes = propTypes;\n\nexport default CatalogItem;\n","import React, { useState } from 'react';\nimport classNames from 'classnames/bind';\nimport CatalogItem from '../catalog-item/CatalogItem';\nimport styles from './Catalog.module.scss';\nimport plugins from '../../plugins/plugins.json';\n\nconst cx = classNames.bind(styles);\n\nconst Catalog = () => {\n  const [searchValue, setSearchValue] = useState('');\n\n  /**\n   * Handles updates to the input change events.\n   * @param {Event} event - The input on change event;\n   */\n  const handleChange = (event) => {\n    setSearchValue(event.target.value.toLowerCase());\n  };\n\n  /**\n   * The filtered component list to populate the catalog.\n   */\n  const components = Object.keys(plugins).map((key) => {\n    const { name, exportType } = plugins[key];\n\n    // Subcomponents are excluded.\n    if (exportType === 'Default' && name.toLowerCase().indexOf(searchValue) > -1) {\n      return <CatalogItem key={key} identifier={key} name={name} />;\n    }\n\n    return undefined;\n  });\n\n  return (\n    <div className={cx('catalog')}>\n      <div>Components</div>\n      <div className={cx('search')}>\n        <input\n          className={cx('input')}\n          onChange={handleChange}\n          placeholder=\"Search Components\"\n          type=\"Search\"\n          value={searchValue}\n        />\n      </div>\n      <div className={cx('components')}>\n        {components}\n      </div>\n    </div>\n  );\n};\n\nexport default Catalog;\n","import React, { useState } from 'react';\nimport classNames from 'classnames/bind';\nimport styles from './Layers.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst Layers = () => {\n  const [height, setHeight] = useState('40%');\n\n  /**\n   * Modifies the layers height as the mouse moves.\n   * @param {event} event - The mouse move event.\n   */\n  const handleMouseMove = (event) => {\n    const { clientY } = event;\n\n    setHeight(`${window.innerHeight - clientY}px`);\n  };\n\n  /**\n   * Restores the window state on mouse up.\n   */\n  const handleMouseUp = () => {\n    // Re-enable user selection and pointer events.\n    document.body.classList.remove(cx('inactive'));\n    document.documentElement.style.cursor = '';\n\n    window.removeEventListener('mousemove', handleMouseMove);\n    window.removeEventListener('mouseup', handleMouseUp);\n  };\n\n  /**\n   * Initializes listeners for resizing the layers.\n   * @param {event} event - The mouse down event.\n   */\n  const handleMouseDown = (event) => {\n    // Only accept left mouse clicks.\n    if (event.button > 1) {\n      return;\n    }\n\n    document.documentElement.style.cursor = 'ns-resize';\n\n    // Disable user selection and pointer events to prevent interference during resizing.\n    document.body.className += cx('inactive');\n\n    window.addEventListener('mousemove', handleMouseMove);\n    window.addEventListener('mouseup', handleMouseUp);\n  };\n\n  return (\n    // eslint-disable-next-line react/forbid-dom-props\n    <div className={cx('layers')} style={{ height }}>\n      <div className={cx('header')} onMouseDown={handleMouseDown} role=\"presentation\">\n        <div className={cx('resizer')} />\n        Layers\n      </div>\n    </div>\n  );\n};\n\nexport default Layers;\n","import React, { useState } from 'react';\nimport classNames from 'classnames/bind';\nimport Catalog from '../catalog/Catalog';\nimport Layers from '../layers/Layers';\nimport styles from './Sidebar.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst Sidebar = () => {\n  const [width, setWidth] = useState(230);\n\n  /**\n   * Modifies the sidebar width as the mouse moves.\n   * @param {event} event - The mouse move event.\n   */\n  const handleMouseMove = (event) => {\n    const { clientX } = event;\n\n    setWidth(clientX);\n  };\n\n  /**\n   * Restores the window state on mouse up.\n   */\n  const handleMouseUp = () => {\n    // Re-enable user selection and pointer events.\n    document.body.classList.remove(cx('inactive'));\n    document.documentElement.style.cursor = '';\n\n    window.removeEventListener('mousemove', handleMouseMove);\n    window.removeEventListener('mouseup', handleMouseUp);\n  };\n\n  /**\n   * Initializes listeners for resizing the sidebar.\n   * @param {event} event - The mouse down event.\n   */\n  const handleMouseDown = (event) => {\n    // Only accept left mouse clicks.\n    if (event.button > 1) {\n      return;\n    }\n\n    // Persists the horizontal resize cursor for the duration of the action.\n    // Without this the cursor will default back to a pointer during a resize action.\n    document.documentElement.style.cursor = 'ew-resize';\n\n    // Disable user selection and pointer events to prevent interference during resizing.\n    document.body.className += cx('inactive');\n\n    window.addEventListener('mousemove', handleMouseMove);\n    window.addEventListener('mouseup', handleMouseUp);\n  };\n\n  return (\n    // eslint-disable-next-line react/forbid-dom-props\n    <div className={cx('sidebar')} style={{ width: `${width}px` }}>\n      <Catalog />\n      <Layers />\n      <div className={cx('resizer')} onMouseDown={handleMouseDown} role=\"presentation\" />\n    </div>\n  );\n};\n\nexport default Sidebar;\n","class Fiber {\n  /**\n   * Finds the nearest component to the click target.\n   * @param {DOMNode} node - The origin node.\n   * @returns {string|null} - The key of the nearest component. Null if not found.\n   */\n  static findNearest(node) {\n    if (node.id === 'root') {\n      return node.id;\n    }\n\n    let target = Fiber.fiberNode(node);\n\n    while (target && !Fiber.match(target.key)) {\n      target = target.return;\n    }\n\n    if (target) {\n      return Fiber.match(target.key);\n    }\n\n    return null;\n  }\n\n  /**\n   * Returns true if the key matches a UUID regex.\n   * @param {string} string - The string to match.\n   * @returns {string|null} - A UUID. Null if no match is found.\n   */\n  static match(key) {\n    const match = `${key}`.match(/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/);\n\n    if (match) {\n      return match[0];\n    }\n\n    return null;\n  }\n\n  /**\n   * Returns the associated fiber node of the dom element.\n   * @param {DOMNode} node - The target node.\n   * @returns {FiberNode|null} - The react internal FiberNode instance.\n   */\n  static fiberNode(node) {\n    const keys = Object.keys(node);\n\n    if (keys.length === 0) {\n      return null;\n    }\n\n    return node[keys.find((key) => key.startsWith('__reactInternalInstance$'))] || null;\n  }\n}\n\nexport default Fiber;\n","import React from 'react';\n\nconst DispatchContext = React.createContext();\n\nexport default DispatchContext;\n","import React from 'react';\nimport plugins from '../../plugins/plugins';\n\nclass WorkspaceGenerator {\n  /**\n   * Generates a workspace.\n   * @param {Object} imports - The available dynamic imports that have been loaded onto the page.\n   * @param {Object} config - The workspace configuration.\n   * @returns {ReactComponent} - A generated react component.\n   */\n  static generate(imports, config) {\n    const { root } = config;\n\n    const components = Object.keys(root).map((component) => (\n      WorkspaceGenerator.component(imports, root[component])\n    ));\n\n    return <>{components}</>;\n  }\n\n  /**\n   * Generates the component import reference.\n   * @param {Object} imports - The available dynamic imports that have been loaded onto the page.\n   * @param {Object} config - The component configuration.\n   * @returns {Object|undefined} - A reference to the import.\n   */\n  static import(imports, config) {\n    const { name } = config;\n\n    if (name === 'terra-sandbox:Placeholder') {\n      return imports[name];\n    }\n\n    const { importFrom, exportType } = plugins[name];\n\n    if (exportType === 'Default') {\n      return imports[importFrom].default;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Generates a component.\n   * @param {Object} imports - The available dynamic imports that have been loaded onto the page.\n   * @param {Object} config - The component configuration.\n   * @return {ReactComponent} - A generated react component.\n   */\n  static component(imports, config) {\n    const { id, props } = config;\n\n    const Component = WorkspaceGenerator.import(imports, config);\n    const properties = WorkspaceGenerator.properties(imports, props);\n\n    return <Component key={id} id={id} {...properties} />;\n  }\n\n  /**\n   * Generates a set of properties.\n   * @param {Object} properties - The component property configurations.\n   * @returns {Object} - A set of generated properties.\n   */\n  static properties(imports, properties) {\n    const props = {};\n\n    Object.keys(properties).forEach((property) => {\n      const value = WorkspaceGenerator.property(imports, properties[property]);\n\n      if (value !== undefined && value !== null) {\n        props[property] = value;\n      }\n    });\n\n    return props;\n  }\n\n  /**\n   * Generates a property.\n   * @param {Object} property - The property to generate.\n   * @returns {Object} - A generated property;\n   */\n  static property(imports, property) {\n    const { type, value } = property;\n\n    if (type === 'bool') {\n      return value;\n    }\n\n    if (type === 'node') {\n      return Object.keys(value).map((node) => WorkspaceGenerator.component(imports, value[node]));\n    }\n\n    if (type === 'element') {\n      return WorkspaceGenerator.generate(imports, property);\n    }\n\n    // eslint-disable-next-line no-console\n    console.log(`WARNING: Unable to interpret property. ${JSON.stringify(property)}`);\n\n    return undefined;\n  }\n}\n\nexport default WorkspaceGenerator;\n","/* eslint-disable react/forbid-prop-types */\nimport React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport Fiber from '../../react-fiber/react-fiber';\nimport DispatchContext from '../../context/DispatchContext';\nimport WorkspaceGenerator from '../../generators/workspace/workspace-generator';\nimport styles from './Canvas.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst propTypes = {\n  /**\n   * The in-progress workspace design.\n   */\n  workspace: PropTypes.object.isRequired,\n  /**\n   * The available dynamic imports that have been loaded onto the page.\n   */\n  imports: PropTypes.object.isRequired,\n};\n\nconst Canvas = (props) => {\n  const { imports, workspace } = props;\n\n  const dispatch = useContext(DispatchContext);\n\n  /**\n   * Selects the nearest component from the origin of the click event.\n   * @param {Event} event - The click event.\n   */\n  function selectNearestTarget(event) {\n    const id = Fiber.findNearest(event.target);\n\n    if (id) {\n      dispatch({ id, type: 'select' });\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', selectNearestTarget);\n\n    return () => {\n      window.removeEventListener('click', selectNearestTarget);\n    };\n  });\n\n  return (\n    <div className={cx('canvas')}>\n      <div className={cx('body')} id=\"root\">\n        {WorkspaceGenerator.generate(imports, workspace)}\n      </div>\n    </div>\n  );\n};\n\nCanvas.propTypes = propTypes;\n\nexport default Canvas;\n","export default {\n  'terra-card': () => import('terra-card'),\n  'terra-list': () => import('terra-list'),\n  'terra-overlay': () => import('terra-overlay'),\n};\n","import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport DispatchContext from '../../context/DispatchContext';\nimport plugins from '../../plugins/plugins';\nimport imports from '../../plugins/imports';\nimport styles from './Placeholder.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst propTypes = {\n  /**\n   * The placeholder identifier.\n   */\n  id: PropTypes.string.isRequired,\n  /**\n   * Whether or not the placeholder should expand to fill the available space.\n   */\n  expand: PropTypes.bool,\n};\n\nconst Placeholder = (props) => {\n  const { id, expand } = props;\n  const [dropped, setDropped] = useState('Drop Zone');\n\n  const dispatch = useContext(DispatchContext);\n\n  /**\n   * Handles the drag over event.\n   * @param {Event} event - The drag over event.\n   */\n  const handleDragover = (event) => {\n    event.preventDefault();\n  };\n\n  /**\n   * Handles the drag enter event.\n   * @param {Event} event - The drag enter event.\n   */\n  const handleDragenter = (event) => {\n    event.preventDefault();\n  };\n\n  /**\n   * Handles the drop event.\n   * @param {Event} event - The drop event.\n   */\n  const handleDrop = (event) => {\n    const sandboxData = event.dataTransfer.getData('terra-sandbox-data');\n\n    if (sandboxData) {\n      const { identifier } = JSON.parse(sandboxData);\n      const { importFrom } = plugins[identifier];\n\n      imports[importFrom]().then((dynamicImport) => {\n        dispatch({\n          id,\n          dynamicImport,\n          type: 'replace',\n          replacement: identifier,\n        });\n      }).catch((error) => {\n        // eslint-disable-next-line no-console\n        console.log(error);\n        setDropped('Whoops, something went wrong');\n      });\n    }\n  };\n\n  return (\n    <div\n      id={id}\n      className={cx('placeholder', { expand })}\n      onDragOver={handleDragover}\n      onDragEnter={handleDragenter}\n      onDrop={handleDrop}\n    >\n      {dropped}\n    </div>\n  );\n};\n\nPlaceholder.propTypes = propTypes;\n\nexport default Placeholder;\n","import uuidv4 from 'uuid/v4';\nimport Placeholder from '../../components/placeholder/Placeholder';\n\nconst initialUUID = uuidv4();\n\nconst initialState = {\n  imports: {\n    'terra-sandbox:Placeholder': Placeholder,\n  },\n  selected: undefined,\n  workspace: {\n    root: {\n      [initialUUID]: {\n        id: initialUUID,\n        parent: 'root',\n        name: 'terra-sandbox:Placeholder',\n        type: 'element',\n        props: {\n          expand: {\n            type: 'bool',\n            value: true,\n          },\n        },\n      },\n    },\n  },\n};\n\nexport default initialState;\n","import uuidv4 from 'uuid/v4';\n\nclass TreeParser {\n  /**\n   * Replaces a target within the tree.\n   * @param {Object} root - The root of the tree.\n   * @param {string} target - The target identifier.\n   * @param {Object} replacement - The replacement node.\n   */\n  static replace(root, target, replacement) {\n    const tree = {};\n\n    Object.keys(root).forEach((node) => {\n      tree[node] = TreeParser.replaceNode(root[node], target, replacement);\n    });\n\n    return { root: tree };\n  }\n\n  /**\n   * Replaces a node within a tree.\n   * @param {Object} node - The current node.\n   * @param {string} target - The target identifier.\n   * @param {Object} replacement - The replacement node.\n   */\n  static replaceNode(node, target, replacement) {\n    const { id, parent, props } = node;\n\n    if (id === target) {\n      return TreeParser.clone(replacement, parent, id);\n    }\n\n    const properties = {};\n\n    Object.keys(props).forEach((property) => {\n      const { type, value } = props[property];\n\n      if (type === 'element') {\n        properties[property] = { type, value: TreeParser.replaceNode(value, target, replacement) };\n      } else if (type === 'node') {\n        const nodes = {};\n\n        Object.keys(value).forEach((key) => {\n          nodes[key] = TreeParser.replaceNode(value[key], target, replacement);\n        });\n\n        properties[property] = { type, value: nodes };\n      } else {\n        properties[property] = props[property];\n      }\n    });\n\n    return { ...node, props: properties };\n  }\n\n  /**\n   * Clones a provided node.\n   * @param {Object} node - The node to clone.\n   * @param {string} parent - Optional parent identifier to assign the node.\n   * @param {string} identifier - Optional identifier to assign the node.\n   */\n  static clone(node, parent, identifier) {\n    const id = identifier || uuidv4();\n\n    const { name, props } = node;\n\n    const properties = {};\n\n    Object.keys(props).forEach((prop) => {\n      const { type, value } = props[prop];\n\n      if (type === 'element') {\n        properties[prop] = { type, value: TreeParser.clone(value, id) };\n      } else if (type === 'node') {\n        const nodes = {};\n\n        Object.keys(value).forEach((key) => {\n          nodes[key] = TreeParser.clone(value[key], id);\n        });\n\n        properties[prop] = { type, value: nodes };\n      } else {\n        properties[prop] = props[prop];\n      }\n    });\n\n    return {\n      id,\n      name,\n      parent,\n      type: 'element',\n      props: properties,\n    };\n  }\n}\n\nexport default TreeParser;\n","import uuidv4 from 'uuid/v4';\nimport plugins from '../../plugins/plugins';\n\nclass ExampleGenerator {\n  /**\n   * Generates an example for a component.\n   * @param {string} name - The component name.\n   * @param {string} id - An optional component identifier.\n   * @param {string} parent - An optional parent identifier.\n   * @returns {Object} - A generated react component represented as an object.\n   */\n  static generate(name, id, parent) {\n    const identifier = id || uuidv4();\n    const { props } = ExampleGenerator.configuration(name);\n\n    return {\n      id: identifier,\n      parent,\n      name,\n      type: 'element',\n      props: ExampleGenerator.properties(identifier, props),\n    };\n  }\n\n  /**\n   * Fetches the component configuration object.\n   * @param {string} name - The component name.\n   * @returns {Object} - The component configuration.\n   */\n  static configuration(name) {\n    if (name === 'terra-sandbox:Placeholder') {\n      return { props: { expand: { type: 'bool' } } };\n    }\n\n    return plugins[name];\n  }\n\n  /**\n   * Generates the example properties.\n   * @param {string} id - The component identifier.\n   * @param {Object} properties - The component properties.\n   * @returns {Object} - The component properties.\n   */\n  static properties(id, properties) {\n    const props = {};\n\n    Object.keys(properties).forEach((property) => {\n      const value = ExampleGenerator.property(id, properties[property]);\n\n      if (value !== undefined && value !== null) {\n        props[property] = value;\n      }\n    });\n\n    return props;\n  }\n\n  /**\n   * Generates an example property.\n   * @param {string} id - The component identifier.\n   * @param {Object} property - The property to generate.\n   * @returns {Object} - A generated property.\n   */\n  static property(id, property) {\n    const { type } = property;\n\n    if (type === 'element') {\n      return ExampleGenerator.generate('terra-sandbox:Placeholder', null, id);\n    }\n\n    if (type === 'node') {\n      const example = ExampleGenerator.generate('terra-sandbox:Placeholder', null, id);\n\n      return { type: 'node', value: { [example.id]: example } };\n    }\n\n    return undefined;\n  }\n}\n\nexport default ExampleGenerator;\n","import plugins from '../../plugins/plugins';\nimport TreeParser from '../../tree-parser/tree-parser';\nimport ExampleGenerator from '../../generators/example/example-generator';\n\n/**\n * Replaces a component with another component.\n * @param {Object} state - The current application state.\n * @param {Object} action - The dispatched action.\n */\nconst replace = (state, action) => {\n  const { imports, workspace } = state;\n  const { root } = workspace;\n  const { id, replacement, dynamicImport } = action;\n\n  // Preserve the existing ID for replacements.\n  const component = ExampleGenerator.generate(replacement, id);\n  const tree = TreeParser.replace(root, id, component);\n\n  // Replace actions may optionally introduce a new dynamic import.\n  if (dynamicImport) {\n    const { importFrom } = plugins[replacement];\n    imports[importFrom] = dynamicImport;\n  }\n\n  return { ...state, imports, workspace: tree };\n};\n\nexport default replace;\n","/**\n * Selects a component.\n * @param {Object} state - The current application state.\n * @param {Object} action - The dispatched action.\n */\nconst select = (state, action) => {\n  const { id } = action;\n\n  return { ...state, selected: id };\n};\n\nexport default select;\n","import initialState from './initial-state/initialState';\nimport replace from './replace/replace';\nimport select from './select/select';\n\nconst reducer = (state, action) => {\n  const { type } = action;\n\n  switch (type) {\n    case 'replace':\n      return replace(state, action);\n    case 'select':\n      return select(state, action);\n    default:\n      // eslint-disable-next-line no-console\n      console.log('WARNING: No reducer action was specified.');\n      return state;\n  }\n};\n\nexport default reducer;\nexport { initialState };\n","import React, { useReducer } from 'react';\nimport Base from 'terra-base';\nimport classNames from 'classnames/bind';\nimport Editor from '../editor/Editor';\nimport Sidebar from '../sidebar/Sidebar';\nimport Canvas from '../canvas/Canvas';\nimport DispatchContext from '../../context/DispatchContext';\nimport reducer, { initialState } from '../../reducer/reducer';\n\nimport styles from './Sandbox.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst Sandbox = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { imports, selected, workspace } = state;\n\n  return (\n    <Base locale=\"en\">\n      <div className={cx('sandbox')}>\n        <div className={cx('header')}>\n          Header\n        </div>\n        <div className={cx('layout')}>\n          <DispatchContext.Provider value={dispatch}>\n            <Sidebar />\n            <Canvas imports={imports} workspace={workspace} />\n            <Editor selected={selected} />\n          </DispatchContext.Provider>\n        </div>\n      </div>\n    </Base>\n  );\n};\n\nexport default Sandbox;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Sandbox from './components/sandbox/Sandbox';\n\nReactDOM.render(<Sandbox />, document.getElementById('root'));\n"],"sourceRoot":""}