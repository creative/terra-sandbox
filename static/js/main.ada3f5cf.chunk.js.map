{"version":3,"sources":["components/editor/Editor.module.scss","components/catalog-item/CatalogItem.module.scss","components/catalog/Catalog.module.scss","components/layers/Layers.module.scss","components/sidebar/Sidebar.module.scss","components/canvas/Canvas.module.scss","components/placeholder/Placeholder.module.scss","components/sandbox/Sandbox.module.scss","components/editor/Editor.jsx","components/catalog-item/CatalogItem.jsx","components/catalog/Catalog.jsx","components/layers/Layers.jsx","components/sidebar/Sidebar.jsx","generators/workspace/workspace-generator.jsx","components/canvas/Canvas.jsx","context/DispatchContext.js","tree-parser/tree-parser.js","generators/example/example-generator.js","reducer/replace/replace.js","plugins/imports.js","components/placeholder/Placeholder.jsx","reducer/initial-state/initialState.js","reducer/reducer.js","components/sandbox/Sandbox.jsx","index.jsx"],"names":["module","exports","cx","classNames","bind","styles","Editor","className","CatalogItem","props","identifier","name","draggable","onDragStart","event","dataTransfer","setData","JSON","stringify","Catalog","useState","searchValue","setSearchValue","components","Object","keys","plugins","map","key","exportType","toLowerCase","indexOf","onChange","target","value","placeholder","type","Layers","height","setHeight","handleMouseMove","clientY","window","innerHeight","handleMouseUp","document","body","classList","remove","documentElement","style","cursor","removeEventListener","onMouseDown","button","addEventListener","role","Sidebar","width","setWidth","clientX","WorkspaceGenerator","imports","config","root","component","importFrom","default","id","Component","import","properties","forEach","property","undefined","node","generate","console","log","Canvas","workspace","DispatchContext","React","createContext","TreeParser","replacement","tree","replaceNode","parent","clone","nodes","uuidv4","prop","ExampleGenerator","configuration","expand","example","replace","state","action","dynamicImport","Placeholder","dropped","setDropped","dispatch","useContext","onDragOver","preventDefault","onDragEnter","onDrop","sandboxData","getData","parse","then","catch","error","initialUUID","initialState","reducer","Sandbox","useReducer","locale","Provider","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ada3f5cf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"editor\":\"Editor_editor__2ZK6b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"catalog-item\":\"CatalogItem_catalog-item__1yJ-b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"catalog\":\"Catalog_catalog__gB0WM\",\"search\":\"Catalog_search__2Y6Ny\",\"input\":\"Catalog_input__1Hzgz\",\"components\":\"Catalog_components__xPgEm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layers\":\"Layers_layers__rrXTR\",\"resizer\":\"Layers_resizer__3c1N3\",\"inactive\":\"Layers_inactive__hyypz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__ybD5g\",\"resizer\":\"Sidebar_resizer__3_P5P\",\"inactive\":\"Sidebar_inactive__1W0Lr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"Canvas_canvas__XH7zY\",\"body\":\"Canvas_body__3F2s9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"placeholder\":\"Placeholder_placeholder__3FXn4\",\"expand\":\"Placeholder_expand__1Py8x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sandbox\":\"Sandbox_sandbox__oA_MS\",\"header\":\"Sandbox_header__3YzRS\",\"layout\":\"Sandbox_layout__625qo\"};","import React from 'react';\nimport classNames from 'classnames/bind';\nimport styles from './Editor.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst Editor = () => (\n  <div className={cx('editor')}>\n    Editor\n  </div>\n);\n\nexport default Editor;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport styles from './CatalogItem.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst propTypes = {\n  /**\n   * The identifier of the component.\n   */\n  identifier: PropTypes.string,\n  /**\n   * The name of the component.\n   */\n  name: PropTypes.string,\n};\n\nconst CatalogItem = (props) => {\n  const { identifier, name } = props;\n\n  /**\n   * Handles the drag start event. Transfers component information.\n   * @param {Event} event - The drag start event.\n   */\n  const handleDragStart = (event) => {\n    event.dataTransfer.setData('terra-sandbox-data', JSON.stringify({ identifier }));\n  };\n\n  return (\n    <div className={cx('catalog-item')} draggable onDragStart={handleDragStart}>\n      {name}\n    </div>\n  );\n};\n\nCatalogItem.propTypes = propTypes;\n\nexport default CatalogItem;\n","import React, { useState } from 'react';\nimport classNames from 'classnames/bind';\nimport CatalogItem from '../catalog-item/CatalogItem';\nimport styles from './Catalog.module.scss';\nimport plugins from '../../plugins/plugins.json';\n\nconst cx = classNames.bind(styles);\n\nconst Catalog = () => {\n  const [searchValue, setSearchValue] = useState('');\n\n  /**\n   * Handles updates to the input change events.\n   * @param {Event} event - The input on change event;\n   */\n  const handleChange = (event) => {\n    setSearchValue(event.target.value.toLowerCase());\n  };\n\n  /**\n   * The filtered component list to populate the catalog.\n   */\n  const components = Object.keys(plugins).map((key) => {\n    const { name, exportType } = plugins[key];\n\n    // Subcomponents are excluded.\n    if (exportType === 'Default' && name.toLowerCase().indexOf(searchValue) > -1) {\n      return <CatalogItem key={key} identifier={key} name={name} />;\n    }\n\n    return undefined;\n  });\n\n  return (\n    <div className={cx('catalog')}>\n      <div>Components</div>\n      <div className={cx('search')}>\n        <input\n          className={cx('input')}\n          onChange={handleChange}\n          placeholder=\"Search Components\"\n          type=\"Search\"\n          value={searchValue}\n        />\n      </div>\n      <div className={cx('components')}>\n        {components}\n      </div>\n    </div>\n  );\n};\n\nexport default Catalog;\n","import React, { useState } from 'react';\nimport classNames from 'classnames/bind';\nimport styles from './Layers.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst Layers = () => {\n  const [height, setHeight] = useState('40%');\n\n  /**\n   * Modifies the layers height as the mouse moves.\n   * @param {event} event - The mouse move event.\n   */\n  const handleMouseMove = (event) => {\n    const { clientY } = event;\n\n    setHeight(`${window.innerHeight - clientY}px`);\n  };\n\n  /**\n   * Restores the window state on mouse up.\n   */\n  const handleMouseUp = () => {\n    // Re-enable user selection and pointer events.\n    document.body.classList.remove(cx('inactive'));\n    document.documentElement.style.cursor = '';\n\n    window.removeEventListener('mousemove', handleMouseMove);\n    window.removeEventListener('mouseup', handleMouseUp);\n  };\n\n  /**\n   * Initializes listeners for resizing the layers.\n   * @param {event} event - The mouse down event.\n   */\n  const handleMouseDown = (event) => {\n    // Only accept left mouse clicks.\n    if (event.button > 1) {\n      return;\n    }\n\n    document.documentElement.style.cursor = 'ns-resize';\n\n    // Disable user selection and pointer events to prevent interference during resizing.\n    document.body.className += cx('inactive');\n\n    window.addEventListener('mousemove', handleMouseMove);\n    window.addEventListener('mouseup', handleMouseUp);\n  };\n\n  return (\n    // eslint-disable-next-line react/forbid-dom-props\n    <div className={cx('layers')} style={{ height }}>\n      <div className={cx('header')} onMouseDown={handleMouseDown} role=\"presentation\">\n        <div className={cx('resizer')} />\n        Layers\n      </div>\n    </div>\n  );\n};\n\nexport default Layers;\n","import React, { useState } from 'react';\nimport classNames from 'classnames/bind';\nimport Catalog from '../catalog/Catalog';\nimport Layers from '../layers/Layers';\nimport styles from './Sidebar.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst Sidebar = () => {\n  const [width, setWidth] = useState(230);\n\n  /**\n   * Modifies the sidebar width as the mouse moves.\n   * @param {event} event - The mouse move event.\n   */\n  const handleMouseMove = (event) => {\n    const { clientX } = event;\n\n    setWidth(clientX);\n  };\n\n  /**\n   * Restores the window state on mouse up.\n   */\n  const handleMouseUp = () => {\n    // Re-enable user selection and pointer events.\n    document.body.classList.remove(cx('inactive'));\n    document.documentElement.style.cursor = '';\n\n    window.removeEventListener('mousemove', handleMouseMove);\n    window.removeEventListener('mouseup', handleMouseUp);\n  };\n\n  /**\n   * Initializes listeners for resizing the sidebar.\n   * @param {event} event - The mouse down event.\n   */\n  const handleMouseDown = (event) => {\n    // Only accept left mouse clicks.\n    if (event.button > 1) {\n      return;\n    }\n\n    // Persists the horizontal resize cursor for the duration of the action.\n    // Without this the cursor will default back to a pointer during a resize action.\n    document.documentElement.style.cursor = 'ew-resize';\n\n    // Disable user selection and pointer events to prevent interference during resizing.\n    document.body.className += cx('inactive');\n\n    window.addEventListener('mousemove', handleMouseMove);\n    window.addEventListener('mouseup', handleMouseUp);\n  };\n\n  return (\n    // eslint-disable-next-line react/forbid-dom-props\n    <div className={cx('sidebar')} style={{ width: `${width}px` }}>\n      <Catalog />\n      <Layers />\n      <div className={cx('resizer')} onMouseDown={handleMouseDown} role=\"presentation\" />\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React from 'react';\nimport plugins from '../../plugins/plugins';\n\nclass WorkspaceGenerator {\n  /**\n   * Generates a workspace.\n   * @param {Object} imports - The available dynamic imports that have been loaded onto the page.\n   * @param {Object} config - The workspace configuration.\n   * @returns {ReactComponent} - A generated react component.\n   */\n  static generate(imports, config) {\n    const { root } = config;\n\n    const components = Object.keys(root).map((component) => (\n      WorkspaceGenerator.component(imports, root[component])\n    ));\n\n    return <>{components}</>;\n  }\n\n  /**\n   * Generates the component import reference.\n   * @param {Object} imports - The available dynamic imports that have been loaded onto the page.\n   * @param {Object} config - The component configuration.\n   * @returns {Object|undefined} - A reference to the import.\n   */\n  static import(imports, config) {\n    const { name } = config;\n\n    if (name === 'terra-sandbox:Placeholder') {\n      return imports[name];\n    }\n\n    const { importFrom, exportType } = plugins[name];\n\n    if (exportType === 'Default') {\n      return imports[importFrom].default;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Generates a component.\n   * @param {Object} imports - The available dynamic imports that have been loaded onto the page.\n   * @param {Object} config - The component configuration.\n   * @return {ReactComponent} - A generated react component.\n   */\n  static component(imports, config) {\n    const { id, props } = config;\n\n    const Component = WorkspaceGenerator.import(imports, config);\n    const properties = WorkspaceGenerator.properties(imports, props);\n\n    return <Component key={id} id={id} {...properties} />;\n  }\n\n  /**\n   * Generates a set of properties.\n   * @param {Object} properties - The component property configurations.\n   * @returns {Object} - A set of generated properties.\n   */\n  static properties(imports, properties) {\n    const props = {};\n\n    Object.keys(properties).forEach((property) => {\n      const value = WorkspaceGenerator.property(imports, properties[property]);\n\n      if (value !== undefined && value !== null) {\n        props[property] = value;\n      }\n    });\n\n    return props;\n  }\n\n  /**\n   * Generates a property.\n   * @param {Object} property - The property to generate.\n   * @returns {Object} - A generated property;\n   */\n  static property(imports, property) {\n    const { type, value } = property;\n\n    if (type === 'bool') {\n      return value;\n    }\n\n    if (type === 'node') {\n      return Object.keys(value).map((node) => WorkspaceGenerator.component(imports, value[node]));\n    }\n\n    if (type === 'element') {\n      return WorkspaceGenerator.generate(imports, property);\n    }\n\n    // eslint-disable-next-line no-console\n    console.log(`WARNING: Unable to interpret property. ${JSON.stringify(property)}`);\n\n    return undefined;\n  }\n}\n\nexport default WorkspaceGenerator;\n","/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport WorkspaceGenerator from '../../generators/workspace/workspace-generator';\nimport styles from './Canvas.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst propTypes = {\n  /**\n   * The in-progress workspace design.\n   */\n  workspace: PropTypes.object.isRequired,\n  /**\n   * The available dynamic imports that have been loaded onto the page.\n   */\n  imports: PropTypes.object.isRequired,\n};\n\nconst Canvas = (props) => {\n  const { imports, workspace } = props;\n\n  return (\n    <div className={cx('canvas')}>\n      <div className={cx('body')}>\n        {WorkspaceGenerator.generate(imports, workspace)}\n      </div>\n    </div>\n  );\n};\n\nCanvas.propTypes = propTypes;\n\nexport default Canvas;\n","import React from 'react';\n\nconst DispatchContext = React.createContext();\n\nexport default DispatchContext;\n","import uuidv4 from 'uuid/v4';\n\nclass TreeParser {\n  /**\n   * Replaces a target within the tree.\n   * @param {Object} root - The root of the tree.\n   * @param {string} target - The target identifier.\n   * @param {Object} replacement - The replacement node.\n   */\n  static replace(root, target, replacement) {\n    const tree = {};\n\n    Object.keys(root).forEach((node) => {\n      tree[node] = TreeParser.replaceNode(root[node], target, replacement);\n    });\n\n    return { root: tree };\n  }\n\n  /**\n   * Replaces a node within a tree.\n   * @param {Object} node - The current node.\n   * @param {string} target - The target identifier.\n   * @param {Object} replacement - The replacement node.\n   */\n  static replaceNode(node, target, replacement) {\n    const { id, parent, props } = node;\n\n    if (id === target) {\n      return TreeParser.clone(replacement, parent, id);\n    }\n\n    const properties = {};\n\n    Object.keys(props).forEach((property) => {\n      const { type, value } = props[property];\n\n      if (type === 'element') {\n        properties[property] = { type, value: TreeParser.replaceNode(value, target, replacement) };\n      } else if (type === 'node') {\n        const nodes = {};\n\n        Object.keys(value).forEach((key) => {\n          nodes[key] = TreeParser.replaceNode(value[key], target, replacement);\n        });\n\n        properties[property] = { type, value: nodes };\n      } else {\n        properties[property] = props[property];\n      }\n    });\n\n    return { ...node, props: properties };\n  }\n\n  /**\n   * Clones a provided node.\n   * @param {Object} node - The node to clone.\n   * @param {string} parent - Optional parent identifier to assign the node.\n   * @param {string} identifier - Optional identifier to assign the node.\n   */\n  static clone(node, parent, identifier) {\n    const id = identifier || uuidv4();\n\n    const { name, props } = node;\n\n    const properties = {};\n\n    Object.keys(props).forEach((prop) => {\n      const { type, value } = props[prop];\n\n      if (type === 'element') {\n        properties[prop] = { type, value: TreeParser.clone(value, id) };\n      } else if (type === 'node') {\n        const nodes = {};\n\n        Object.keys(value).forEach((key) => {\n          nodes[key] = TreeParser.clone(value[key], id);\n        });\n\n        properties[prop] = { type, value: nodes };\n      } else {\n        properties[prop] = props[prop];\n      }\n    });\n\n    return {\n      id,\n      name,\n      parent,\n      type: 'element',\n      props: properties,\n    };\n  }\n}\n\nexport default TreeParser;\n","import uuidv4 from 'uuid/v4';\nimport plugins from '../../plugins/plugins';\n\nclass ExampleGenerator {\n  /**\n   * Generates an example for a component.\n   * @param {string} name - The component name.\n   * @param {string} id - An optional component identifier.\n   * @param {string} parent - An optional parent identifier.\n   * @returns {Object} - A generated react component represented as an object.\n   */\n  static generate(name, id, parent) {\n    const identifier = id || uuidv4();\n    const { props } = ExampleGenerator.configuration(name);\n\n    return {\n      id: identifier,\n      parent,\n      name,\n      type: 'element',\n      props: ExampleGenerator.properties(identifier, props),\n    };\n  }\n\n  /**\n   * Fetches the component configuration object.\n   * @param {string} name - The component name.\n   * @returns {Object} - The component configuration.\n   */\n  static configuration(name) {\n    if (name === 'terra-sandbox:Placeholder') {\n      return { props: { expand: { type: 'bool' } } };\n    }\n\n    return plugins[name];\n  }\n\n  /**\n   * Generates the example properties.\n   * @param {string} id - The component identifier.\n   * @param {Object} properties - The component properties.\n   * @returns {Object} - The component properties.\n   */\n  static properties(id, properties) {\n    const props = {};\n\n    Object.keys(properties).forEach((property) => {\n      const value = ExampleGenerator.property(id, properties[property]);\n\n      if (value !== undefined && value !== null) {\n        props[property] = value;\n      }\n    });\n\n    return props;\n  }\n\n  /**\n   * Generates an example property.\n   * @param {string} id - The component identifier.\n   * @param {Object} property - The property to generate.\n   * @returns {Object} - A generated property.\n   */\n  static property(id, property) {\n    const { type } = property;\n\n    if (type === 'element') {\n      return ExampleGenerator.generate('terra-sandbox:Placeholder', null, id);\n    }\n\n    if (type === 'node') {\n      const example = ExampleGenerator.generate('terra-sandbox:Placeholder', null, id);\n\n      return { type: 'node', value: { [example.id]: example } };\n    }\n\n    return undefined;\n  }\n}\n\nexport default ExampleGenerator;\n","import plugins from '../../plugins/plugins';\nimport TreeParser from '../../tree-parser/tree-parser';\nimport ExampleGenerator from '../../generators/example/example-generator';\n\n/**\n * Replaces a component with another component.\n * @param {Object} state - The current application state.\n * @param {Object} action - The dispatched action.\n */\nconst replace = (state, action) => {\n  const { imports, workspace } = state;\n  const { root } = workspace;\n  const { id, replacement, dynamicImport } = action;\n\n  // Preserve the existing ID for replacements.\n  const component = ExampleGenerator.generate(replacement, id);\n  const tree = TreeParser.replace(root, id, component);\n\n  // Replace actions may optionally introduce a new dynamic import.\n  if (dynamicImport) {\n    const { importFrom } = plugins[replacement];\n    imports[importFrom] = dynamicImport;\n  }\n\n  return { ...state, imports, workspace: tree };\n};\n\nexport default replace;\n","export default {\n  'terra-card': () => import('terra-card'),\n  'terra-list': () => import('terra-list'),\n  'terra-overlay': () => import('terra-overlay'),\n};\n","import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport DispatchContext from '../../context/DispatchContext';\nimport plugins from '../../plugins/plugins';\nimport imports from '../../plugins/imports';\nimport styles from './Placeholder.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst propTypes = {\n  /**\n   * The placeholder identifier.\n   */\n  id: PropTypes.string.isRequired,\n  /**\n   * Whether or not the placeholder should expand to fill the available space.\n   */\n  expand: PropTypes.bool,\n};\n\nconst Placeholder = (props) => {\n  const { id, expand } = props;\n  const [dropped, setDropped] = useState('Drop Zone');\n\n  const dispatch = useContext(DispatchContext);\n\n  /**\n   * Handles the drag over event.\n   * @param {Event} event - The drag over event.\n   */\n  const handleDragover = (event) => {\n    event.preventDefault();\n  };\n\n  /**\n   * Handles the drag enter event.\n   * @param {Event} event - The drag enter event.\n   */\n  const handleDragenter = (event) => {\n    event.preventDefault();\n  };\n\n  /**\n   * Handles the drop event.\n   * @param {Event} event - The drop event.\n   */\n  const handleDrop = (event) => {\n    const sandboxData = event.dataTransfer.getData('terra-sandbox-data');\n\n    if (sandboxData) {\n      const { identifier } = JSON.parse(sandboxData);\n      const { importFrom } = plugins[identifier];\n\n      imports[importFrom]().then((dynamicImport) => {\n        dispatch({\n          id,\n          dynamicImport,\n          type: 'replace',\n          replacement: identifier,\n        });\n      }).catch((error) => {\n        // eslint-disable-next-line no-console\n        console.log(error);\n        setDropped('Whoops, something went wrong');\n      });\n    }\n  };\n\n  return (\n    <div\n      className={cx('placeholder', { expand })}\n      onDragOver={handleDragover}\n      onDragEnter={handleDragenter}\n      onDrop={handleDrop}\n    >\n      {dropped}\n    </div>\n  );\n};\n\nPlaceholder.propTypes = propTypes;\n\nexport default Placeholder;\n","import uuidv4 from 'uuid/v4';\nimport Placeholder from '../../components/placeholder/Placeholder';\n\nconst initialUUID = uuidv4();\n\nconst initialState = {\n  workspace: {\n    root: {\n      [initialUUID]: {\n        id: initialUUID,\n        parent: 'root',\n        name: 'terra-sandbox:Placeholder',\n        type: 'element',\n        props: {\n          expand: {\n            type: 'bool',\n            value: true,\n          },\n        },\n      },\n    },\n  },\n  imports: {\n    'terra-sandbox:Placeholder': Placeholder,\n  },\n};\n\nexport default initialState;\n","import replace from './replace/replace';\nimport initialState from './initial-state/initialState';\n\nconst reducer = (state, action) => {\n  const { type } = action;\n\n  switch (type) {\n    case 'replace':\n      return replace(state, action);\n    default:\n      // eslint-disable-next-line no-console\n      console.log('WARNING: No reducer action was specified.');\n      return state;\n  }\n};\n\nexport default reducer;\nexport { initialState };\n","import React, { useReducer } from 'react';\nimport Base from 'terra-base';\nimport classNames from 'classnames/bind';\nimport Editor from '../editor/Editor';\nimport Sidebar from '../sidebar/Sidebar';\nimport Canvas from '../canvas/Canvas';\nimport DispatchContext from '../../context/DispatchContext';\nimport reducer, { initialState } from '../../reducer/reducer';\n\nimport styles from './Sandbox.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst Sandbox = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { imports, workspace } = state;\n\n  return (\n    <Base locale=\"en\">\n      <div className={cx('sandbox')}>\n        <div className={cx('header')}>\n          Header\n        </div>\n        <div className={cx('layout')}>\n          <DispatchContext.Provider value={dispatch}>\n            <Sidebar />\n            <Canvas imports={imports} workspace={workspace} />\n            <Editor />\n          </DispatchContext.Provider>\n        </div>\n      </div>\n    </Base>\n  );\n};\n\nexport default Sandbox;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Sandbox from './components/sandbox/Sandbox';\n\nReactDOM.render(<Sandbox />, document.getElementById('root'));\n"],"sourceRoot":""}