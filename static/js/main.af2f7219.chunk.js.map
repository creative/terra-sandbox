{"version":3,"sources":["components/editor/Editor.module.scss","components/catalog-item/CatalogItem.module.scss","components/catalog/Catalog.module.scss","components/tree/Tree.module.scss","components/layers/Layers.module.scss","components/sidebar/Sidebar.module.scss","components/canvas/Canvas.module.scss","components/placeholder/Placeholder.module.scss","components/workspace/Workspace.module.scss","components/editor/Editor.jsx","components/catalog-item/CatalogItem.jsx","components/catalog/Catalog.jsx","components/tree/Tree.jsx","components/layers/Layers.jsx","components/sidebar/Sidebar.jsx","context/DispatchContext.js","generators/canvas/canvas-generator.jsx","react-fiber/react-fiber.js","components/canvas/Canvas.jsx","generators/example/example-generator.js","plugins/imports.js","components/placeholder/Placeholder.jsx","reducer/initial-state/initialState.js","tree-parser/tree-parser.js","reducer/replace/replace.js","reducer/select/select.js","reducer/reducer.js","components/workspace/Workspace.jsx","index.jsx"],"names":["module","exports","cx","classNames","bind","styles","Editor","props","selected","className","CatalogItem","identifier","name","draggable","onDragStart","event","dataTransfer","setData","JSON","stringify","Catalog","useState","searchValue","setSearchValue","components","Object","keys","plugins","map","key","hidden","exportType","toLowerCase","indexOf","onChange","target","value","placeholder","type","Tree","node","depth","properties","children","displayName","style","paddingLeft","forEach","property","id","propertyValue","push","length","defaultProps","Layers","canvas","Sidebar","sidebar","useRef","topSection","bottomSection","verticalResizer","handleMouseMoveHorizontal","clientX","current","width","handleMouseMoveVertical","resizerHeight","clientHeight","sidebarHeight","height","clientY","offsetTop","topSectionHeight","Math","max","min","bottomSectionHeight","handleMouseUp","document","body","classList","remove","documentElement","cursor","window","removeEventListener","ref","onMouseDown","button","addEventListener","role","DispatchContext","React","createContext","CanvasGenerator","imports","config","element","importFrom","default","Component","import","generate","undefined","Fiber","fiberNode","match","return","find","startsWith","Canvas","dispatch","useContext","selectNearestTarget","findNearest","useEffect","ExampleGenerator","parent","uuidv4","initialState","dropped","setDropped","onDragOver","preventDefault","onDragEnter","onDrop","sandboxData","getData","parse","then","dynamicImport","replacement","catch","error","console","log","TreeParser","replaceElement","replaceNode","prop","replace","nodes","replacementNode","state","action","canvasTree","select","reducer","Workspace","useReducer","locale","Provider","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.af2f7219.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"editor\":\"Editor_editor__2ZK6b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"catalog-item\":\"CatalogItem_catalog-item__1yJ-b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"catalog\":\"Catalog_catalog__gB0WM\",\"header\":\"Catalog_header__2Q7l6\",\"input\":\"Catalog_input__1Hzgz\",\"components\":\"Catalog_components__xPgEm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tree\":\"Tree_tree__1MuX5\",\"children\":\"Tree_children__dYfyS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layers\":\"Layers_layers__rrXTR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__ybD5g\",\"content\":\"Sidebar_content__3RRDH\",\"top-section\":\"Sidebar_top-section__1lbbA\",\"bottom-section\":\"Sidebar_bottom-section__2Htyu\",\"horizontal-resizer\":\"Sidebar_horizontal-resizer__2bi31\",\"vertical-resizer\":\"Sidebar_vertical-resizer__3RH35\",\"inactive\":\"Sidebar_inactive__1W0Lr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"Canvas_canvas__XH7zY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"placeholder\":\"Placeholder_placeholder__3FXn4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"workspace\":\"Workspace_workspace__2jYut\",\"canvas\":\"Workspace_canvas__262rA\",\"header\":\"Workspace_header__-EbAe\",\"layout\":\"Workspace_layout__1z6lc\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport styles from './Editor.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst propTypes = {\n  /**\n   * The identifier of the selected component.\n   */\n  selected: PropTypes.string,\n};\n\nconst Editor = (props) => {\n  const { selected } = props;\n\n  return (\n    <div className={cx('editor')}>\n      Editor Selected:\n      {' '}\n      {selected}\n    </div>\n  );\n};\n\nEditor.propTypes = propTypes;\n\nexport default Editor;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport styles from './CatalogItem.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst propTypes = {\n  /**\n   * The identifier of the component.\n   */\n  identifier: PropTypes.string,\n  /**\n   * The name of the component.\n   */\n  name: PropTypes.string,\n};\n\nconst CatalogItem = (props) => {\n  const { identifier, name } = props;\n\n  /**\n   * Handles the drag start event. Transfers component information.\n   * @param {Event} event - The drag start event.\n   */\n  const handleDragStart = (event) => {\n    event.dataTransfer.setData('terra-sandbox-data', JSON.stringify({ identifier }));\n  };\n\n  return (\n    <div className={cx('catalog-item')} draggable onDragStart={handleDragStart}>\n      {name}\n    </div>\n  );\n};\n\nCatalogItem.propTypes = propTypes;\n\nexport default CatalogItem;\n","import React, { useState } from 'react';\nimport classNames from 'classnames/bind';\nimport CatalogItem from '../catalog-item/CatalogItem';\nimport styles from './Catalog.module.scss';\nimport plugins from '../../plugins/plugins.json';\n\nconst cx = classNames.bind(styles);\n\nconst Catalog = () => {\n  const [searchValue, setSearchValue] = useState('');\n\n  /**\n   * Handles updates to the input change events.\n   * @param {Event} event - The input on change event;\n   */\n  const handleChange = (event) => {\n    setSearchValue(event.target.value.toLowerCase());\n  };\n\n  /**\n   * The filtered component list to populate the catalog.\n   */\n  const components = Object.keys(plugins).map((key) => {\n    const { hidden, name, exportType } = plugins[key];\n\n    // Subcomponents are excluded.\n    if (!hidden && (exportType === 'Default' && name.toLowerCase().indexOf(searchValue) > -1)) {\n      return <CatalogItem key={key} identifier={key} name={name} />;\n    }\n\n    return undefined;\n  });\n\n  return (\n    <div className={cx('catalog')}>\n      <div className={cx('header')}>\n        Catalog\n      </div>\n      <input\n        className={cx('input')}\n        onChange={handleChange}\n        placeholder=\"Search Components\"\n        type=\"Search\"\n        value={searchValue}\n      />\n      <div className={cx('components')}>\n        {components}\n      </div>\n    </div>\n  );\n};\n\nexport default Catalog;\n","/* eslint-disable react/forbid-dom-props */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport plugins from '../../plugins/plugins';\nimport styles from './Tree.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst propTypes = {\n  /**\n   * The node to generate.\n   */\n  node: PropTypes.object.isRequired,\n  /**\n   * The depth of the node.\n   */\n  depth: PropTypes.number,\n};\n\nconst defaultProps = {\n  depth: 0,\n};\n\nconst Tree = (props) => {\n  const { node, depth } = props;\n  const { value } = node;\n  const { name, props: properties } = value;\n\n  const children = [];\n  const displayName = plugins[name].name;\n  const style = { paddingLeft: `${depth * 15}px` };\n\n  Object.keys(properties).forEach((property) => {\n    const { id, type, value: propertyValue } = properties[property];\n\n    if (type === 'node') {\n      children.push(Object.keys(propertyValue).map((key) => (\n        <Tree key={id} node={propertyValue[key]} depth={depth + 1} />\n      )));\n    }\n\n    if (type === 'element') {\n      children.push(<Tree key={id} node={properties[property]} depth={depth + 1} />);\n    }\n  });\n\n  return (\n    <ul className={cx('tree')}>\n      <li>\n        <div style={style}>\n          {displayName}\n        </div>\n        {children.length > 0 && (\n          <ul className={cx('children')}>\n            {children}\n          </ul>\n        )}\n      </li>\n    </ul>\n  );\n};\n\nTree.propTypes = propTypes;\nTree.defaultProps = defaultProps;\n\nexport default Tree;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport Tree from '../tree/Tree';\nimport styles from './Layers.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst propTypes = {\n  /**\n   * The identifier of the selected component.\n   */\n  selected: PropTypes.string,\n  /**\n   * The in-progress canvas design.\n   */\n  canvas: PropTypes.object.isRequired,\n};\n\nconst Layers = (props) => {\n  const { selected, canvas } = props;\n  const { id } = canvas;\n\n  return (\n    <div className={cx('layers')}>\n      <div>\n        Layers\n      </div>\n      <Tree key={id} node={canvas} selected={selected} />\n    </div>\n  );\n};\n\nLayers.propTypes = propTypes;\n\nexport default Layers;\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport Catalog from '../catalog/Catalog';\nimport Layers from '../layers/Layers';\nimport styles from './Sidebar.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst propTypes = {\n  /**\n   * The identifier of the selected component.\n   */\n  selected: PropTypes.string,\n  /**\n   * The in-progress canvas design.\n   */\n  canvas: PropTypes.object.isRequired,\n};\n\nconst Sidebar = (props) => {\n  const { selected, canvas } = props;\n\n  const sidebar = useRef();\n  const topSection = useRef();\n  const bottomSection = useRef();\n  const verticalResizer = useRef();\n\n  /**\n   * Modifies the sidebar width as the mouse moves horizontally.\n   * @param {event} event - The mouse move event.\n   */\n  const handleMouseMoveHorizontal = (event) => {\n    const { clientX } = event;\n\n    sidebar.current.style.width = `${clientX}px`;\n  };\n\n  /**\n   * Modifies the layers height as the mouse moves vertically.\n   * @param {event} event - The mouse move event.\n   */\n  const handleMouseMoveVertical = (event) => {\n    const resizerHeight = verticalResizer.current.clientHeight;\n    const sidebarHeight = sidebar.current.clientHeight;\n\n    const height = event.clientY - sidebar.current.offsetTop;\n    const topSectionHeight = Math.max(0, Math.min(sidebarHeight - resizerHeight, height));\n    const bottomSectionHeight = Math.max(0, Math.min(sidebarHeight, sidebarHeight - topSectionHeight - resizerHeight));\n\n    topSection.current.style.height = `${topSectionHeight}px`;\n    bottomSection.current.style.height = `${bottomSectionHeight}px`;\n  };\n\n  /**\n   * Restores the window state on mouse up.\n   */\n  const handleMouseUp = () => {\n    // Re-enable user selection and pointer events.\n    document.body.classList.remove(cx('inactive'));\n    document.documentElement.style.cursor = '';\n\n    window.removeEventListener('mousemove', handleMouseMoveHorizontal);\n    window.removeEventListener('mousemove', handleMouseMoveVertical);\n    window.removeEventListener('mouseup', handleMouseUp);\n  };\n\n  /**\n   * Initializes listeners for resizing the sidebar.\n   * @param {event} event - The mouse down event.\n   */\n  const handleMouseDownHorizontal = (event) => {\n    // Only accept left mouse clicks.\n    if (event.button > 1) {\n      return;\n    }\n\n    // Persists the horizontal resize cursor for the duration of the action.\n    // Without this the cursor will default back to a pointer during a resize action.\n    document.documentElement.style.cursor = 'ew-resize';\n\n    // Disable user selection and pointer events to prevent interference during resizing.\n    document.body.className += cx('inactive');\n\n    window.addEventListener('mousemove', handleMouseMoveHorizontal);\n    window.addEventListener('mouseup', handleMouseUp);\n  };\n\n  /**\n   * Initializes listeners for resizing the bottom section vertically.\n   * @param {event} event - The mouse down event.\n   */\n  const handleMouseDownVertical = (event) => {\n    // Only accept left mouse clicks.\n    if (event.button > 1) {\n      return;\n    }\n\n    document.documentElement.style.cursor = 'ns-resize';\n\n    // Disable user selection and pointer events to prevent interference during resizing.\n    document.body.className += cx('inactive');\n\n    window.addEventListener('mousemove', handleMouseMoveVertical);\n    window.addEventListener('mouseup', handleMouseUp);\n  };\n\n  return (\n    // eslint-disable-next-line react/forbid-dom-props\n    <div className={cx('sidebar')} ref={sidebar}>\n      <div className={cx('content')}>\n        <div className={cx('top-section')} ref={topSection}>\n          <Catalog />\n        </div>\n        <div className={cx('vertical-resizer')} onMouseDown={handleMouseDownVertical} role=\"presentation\" ref={verticalResizer} />\n        <div className={(cx('bottom-section'))} ref={bottomSection}>\n          <Layers selected={selected} canvas={canvas} />\n        </div>\n      </div>\n      <div className={cx('horizontal-resizer')} onMouseDown={handleMouseDownHorizontal} role=\"presentation\" />\n    </div>\n  );\n};\n\nSidebar.propTypes = propTypes;\n\nexport default Sidebar;\n","import React from 'react';\n\nconst DispatchContext = React.createContext();\n\nexport default DispatchContext;\n","import React from 'react';\nimport plugins from '../../plugins/plugins';\n\nclass CanvasGenerator {\n  /**\n   * Generates a renderable component from a configuration.\n   * @param {Object} imports - The available dynamic imports that have been loaded onto the page.\n   * @param {Object} config - The object representation of the renderable object.\n   * @returns {ReactElement|string|number|array} - A renderable component.\n   */\n  static generate(imports, config) {\n    const { type, value } = config;\n\n    if (type === 'element') {\n      return CanvasGenerator.element(imports, config);\n    }\n\n    if (type === 'node') {\n      return CanvasGenerator.node(imports, config);\n    }\n\n    return value;\n  }\n\n  /**\n   * Returns the import reference for creating the component.\n   * @param {Object} imports - The available dynamic imports that have been loaded onto the page.\n   * @param {Object} config - The component configuration.\n   * @returns {Object|undefined} - A reference to the import.\n   */\n  static import(imports, config) {\n    const { name } = config;\n    const { importFrom, exportType } = plugins[name];\n\n    if (name === 'terra-sandbox:Placeholder' || name === 'terra-sandbox:Canvas') {\n      return imports[importFrom];\n    }\n\n    if (exportType === 'Default') {\n      return imports[importFrom].default;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Creates a renderable react element for a given configuration.\n   * @param {Object} imports - The available dynamic imports that have been loaded onto the page.\n   * @param {Object} config - The element configuration.\n   * @return {ReactElement} - A react element.\n   */\n  static element(imports, config) {\n    const { id, value } = config;\n    const { props } = value;\n\n    const properties = {};\n    const Component = CanvasGenerator.import(imports, value);\n\n    Object.keys(props).forEach((property) => {\n      const propertyValue = CanvasGenerator.generate(imports, props[property]);\n\n      if (propertyValue !== undefined && propertyValue !== null) {\n        properties[property] = propertyValue;\n      }\n    });\n\n    return <Component key={id} id={id} {...properties} />;\n  }\n\n  /**\n   * Generates the renderable items for a given node configuration.\n   * @param {Object} imports - The available dynamic imports that have been loaded onto the page.\n   * @param {Object} config - The node configuration.\n   * @return {ReactElement|string|number|array} - The renderable items for a node datatype.\n   */\n  static node(imports, config) {\n    const { value } = config;\n\n    const keys = Object.keys(value);\n\n    if (keys.length === 0) {\n      return undefined;\n    }\n\n    if (keys.length === 1) {\n      return CanvasGenerator.generate(imports, value[keys[0]]);\n    }\n\n    return keys.map((key) => CanvasGenerator.generate(imports, value[key]));\n  }\n}\n\nexport default CanvasGenerator;\n","class Fiber {\n  /**\n   * Finds the nearest component to the click target.\n   * @param {DOMNode} node - The origin node.\n   * @returns {string|null} - The key of the nearest component. Null if not found.\n   */\n  static findNearest(node) {\n    let target = Fiber.fiberNode(node);\n\n    while (target && !Fiber.match(target.key)) {\n      target = target.return;\n    }\n\n    if (target) {\n      return Fiber.match(target.key);\n    }\n\n    return null;\n  }\n\n  /**\n   * Returns true if the key matches a UUID regex.\n   * @param {string} string - The string to match.\n   * @returns {string|null} - A UUID. Null if no match is found.\n   */\n  static match(key) {\n    const match = `${key}`.match(/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/);\n\n    if (match) {\n      return match[0];\n    }\n\n    return null;\n  }\n\n  /**\n   * Returns the associated fiber node of the dom element.\n   * @param {DOMNode} node - The target node.\n   * @returns {FiberNode|null} - The react internal FiberNode instance.\n   */\n  static fiberNode(node) {\n    const keys = Object.keys(node);\n\n    if (keys.length === 0) {\n      return null;\n    }\n\n    return node[keys.find((key) => key.startsWith('__reactInternalInstance$'))] || null;\n  }\n}\n\nexport default Fiber;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport Fiber from '../../react-fiber/react-fiber';\nimport DispatchContext from '../../context/DispatchContext';\nimport styles from './Canvas.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst propTypes = {\n  /**\n   * The children of the canvas.\n   */\n  children: PropTypes.node.isRequired,\n};\n\nconst Canvas = (props) => {\n  const { children } = props;\n\n  const dispatch = useContext(DispatchContext);\n\n  /**\n   * Selects the nearest component from the origin of the click event.\n   * @param {Event} event - The click event.\n   */\n  function selectNearestTarget(event) {\n    const id = Fiber.findNearest(event.target);\n\n    if (id) {\n      dispatch({ id, type: 'select' });\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', selectNearestTarget);\n\n    return () => {\n      window.removeEventListener('click', selectNearestTarget);\n    };\n  });\n\n  return (\n    <div className={cx('canvas')}>\n      {children}\n    </div>\n  );\n};\n\nCanvas.propTypes = propTypes;\n\nexport default Canvas;\n","import uuidv4 from 'uuid/v4';\nimport plugins from '../../plugins/plugins';\n\nclass ExampleGenerator {\n  /**\n   * Generates an example object for a provided configuration.\n   * @param {Object} config - The example configuration.\n   * @returns {Object} - A generated example.\n   */\n  static generate(config) {\n    const { type, parent } = config;\n\n    let value;\n    const id = uuidv4();\n\n    if (type === 'element') {\n      value = ExampleGenerator.element({ ...config, id });\n    } else if (type === 'node') {\n      value = ExampleGenerator.node({ ...config, id });\n    }\n\n    return { id, parent, type, value };\n  }\n\n  /**\n   * Generates an example object representation of a react element.\n   * @param {Object} config - The example configuration.\n   * @returns {Object} - An Object representation of a react element.\n   */\n  static element(config) {\n    const { id, name = 'terra-sandbox:Placeholder' } = config;\n    const { props } = plugins[name];\n\n    const properties = {};\n\n    Object.keys(props).forEach((property) => {\n      properties[property] = ExampleGenerator.generate({ ...props[property], parent: id });\n    });\n\n    return { name, props: properties };\n  }\n\n  /**\n   * Generates an example object representation for a node datatype.\n   * @param {Object} config - The example configuration.\n   * @returns {Object} - An Object representation of the node.\n   */\n  static node(config) {\n    const { id } = config;\n    const placeholder = ExampleGenerator.generate({ parent: id, type: 'element' });\n\n    return { [placeholder.id]: placeholder };\n  }\n}\n\nexport default ExampleGenerator;\n","export default {\n  'terra-button': () => import('terra-button'),\n  'terra-card': () => import('terra-card'),\n  'terra-content-container': () => import('terra-content-container'),\n  'terra-list': () => import('terra-list'),\n  'terra-overlay': () => import('terra-overlay'),\n};\n","import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport DispatchContext from '../../context/DispatchContext';\nimport ExampleGenerator from '../../generators/example/example-generator';\nimport plugins from '../../plugins/plugins';\nimport imports from '../../plugins/imports';\nimport styles from './Placeholder.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst propTypes = {\n  /**\n   * The placeholder identifier.\n   */\n  id: PropTypes.string.isRequired,\n};\n\nconst Placeholder = (props) => {\n  const { id } = props;\n  const [dropped, setDropped] = useState('Drop Zone');\n\n  const dispatch = useContext(DispatchContext);\n\n  /**\n   * Handles the drag over event.\n   * @param {Event} event - The drag over event.\n   */\n  const handleDragover = (event) => {\n    event.preventDefault();\n  };\n\n  /**\n   * Handles the drag enter event.\n   * @param {Event} event - The drag enter event.\n   */\n  const handleDragenter = (event) => {\n    event.preventDefault();\n  };\n\n  /**\n   * Handles the drop event.\n   * @param {Event} event - The drop event.\n   */\n  const handleDrop = (event) => {\n    const sandboxData = event.dataTransfer.getData('terra-sandbox-data');\n\n    if (sandboxData) {\n      const { identifier } = JSON.parse(sandboxData);\n      const { importFrom } = plugins[identifier];\n\n      imports[importFrom]().then((dynamicImport) => {\n        const replacement = ExampleGenerator.generate({ name: identifier, type: 'element' });\n\n        dispatch({ id, dynamicImport, replacement, type: 'replace' });\n      }).catch((error) => {\n        // eslint-disable-next-line no-console\n        console.log(error);\n        setDropped('Whoops, something went wrong');\n      });\n    }\n  };\n\n  return (\n    <div\n      id={id}\n      className={cx('placeholder')}\n      onDragOver={handleDragover}\n      onDragEnter={handleDragenter}\n      onDrop={handleDrop}\n    >\n      {dropped}\n    </div>\n  );\n};\n\nPlaceholder.propTypes = propTypes;\n\nexport default Placeholder;\n","import Canvas from '../../components/canvas/Canvas';\nimport Placeholder from '../../components/placeholder/Placeholder';\nimport ExampleGenerator from '../../generators/example/example-generator';\n\nconst initialState = {\n  imports: {\n    'terra-sandbox:Canvas': Canvas,\n    'terra-sandbox:Placeholder': Placeholder,\n  },\n  selected: undefined,\n  canvas: ExampleGenerator.generate({ type: 'element', name: 'terra-sandbox:Canvas' }),\n};\n\nexport default initialState;\n","class TreeParser {\n  /**\n   * Replaces a node.\n   * @param {Object} node - A node.\n   * @param {string} target - The target identifier.\n   * @param {Object} replacement - The replacement node.\n   */\n  static replace(node, target, replacement) {\n    const { id, parent, type } = node;\n\n    if (id === target) {\n      return { ...replacement, parent };\n    }\n\n    if (type === 'element') {\n      return TreeParser.replaceElement(node, target, replacement);\n    }\n\n    if (type === 'node') {\n      return TreeParser.replaceNode(node, target, replacement);\n    }\n\n    return node;\n  }\n\n  /**\n   * Iterates through the element node props and replaces the target.\n   * @param {Object} node - The node.\n   * @param {string} target - The target identifier.\n   * @param {Object} replacement - The replacement node.\n   */\n  static replaceElement(node, target, replacement) {\n    const { id, parent, type, value } = node;\n    const { name, props } = value;\n\n    const properties = {};\n\n    Object.keys(props).forEach((prop) => {\n      properties[prop] = TreeParser.replace(props[prop], target, replacement);\n    });\n\n    return { id, parent, type, value: { name, props: properties } };\n  }\n\n  /**\n   * Iterates through the node keys and replaces the target.\n   * @param {Object} node - The node.\n   * @param {string} target - The target identifier.\n   * @param {Object} replacement - The replacement node.\n   */\n  static replaceNode(node, target, replacement) {\n    const { id, parent, type, value } = node;\n\n    const nodes = {};\n\n    Object.keys(value).forEach((key) => {\n      const replacementNode = TreeParser.replace(value[key], target, replacement);\n\n      nodes[replacementNode.id] = replacementNode;\n    });\n\n    return { id, parent, type, value: nodes };\n  }\n}\n\nexport default TreeParser;\n","import plugins from '../../plugins/plugins';\nimport TreeParser from '../../tree-parser/tree-parser';\n\n/**\n * Replaces a component with another component.\n * @param {Object} state - The current application state.\n * @param {Object} action - The dispatched action.\n */\nconst replace = (state, action) => {\n  const { imports, canvas } = state;\n  const { id, replacement, dynamicImport } = action;\n\n  // Replace actions may optionally introduce a new dynamic import.\n  if (dynamicImport) {\n    const { value } = replacement;\n    const { name } = value;\n    const { importFrom } = plugins[name];\n\n    imports[importFrom] = dynamicImport;\n  }\n\n  const canvasTree = TreeParser.replace(canvas, id, replacement);\n\n  return { ...state, imports, canvas: canvasTree };\n};\n\nexport default replace;\n","/**\n * Selects a component.\n * @param {Object} state - The current application state.\n * @param {Object} action - The dispatched action.\n */\nconst select = (state, action) => {\n  const { id } = action;\n\n  return { ...state, selected: id };\n};\n\nexport default select;\n","import initialState from './initial-state/initialState';\nimport replace from './replace/replace';\nimport select from './select/select';\n\nconst reducer = (state, action) => {\n  const { type } = action;\n\n  switch (type) {\n    case 'replace':\n      return replace(state, action);\n    case 'select':\n      return select(state, action);\n    default:\n      // eslint-disable-next-line no-console\n      console.log('WARNING: No reducer action was specified.');\n      return state;\n  }\n};\n\nexport default reducer;\nexport { initialState };\n","import React, { useReducer } from 'react';\nimport Base from 'terra-base';\nimport classNames from 'classnames/bind';\nimport Editor from '../editor/Editor';\nimport Sidebar from '../sidebar/Sidebar';\nimport DispatchContext from '../../context/DispatchContext';\nimport CanvasGenerator from '../../generators/canvas/canvas-generator';\nimport reducer, { initialState } from '../../reducer/reducer';\n\nimport styles from './Workspace.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst Workspace = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { imports, selected, canvas } = state;\n\n  return (\n    <Base locale=\"en\">\n      <div className={cx('workspace')}>\n        <div className={cx('header')}>\n          Header\n        </div>\n        <div className={cx('layout')}>\n          <DispatchContext.Provider value={dispatch}>\n            <Sidebar selected={selected} canvas={canvas} />\n            <div className={cx('canvas')}>\n              {CanvasGenerator.generate(imports, canvas)}\n            </div>\n            <Editor selected={selected} canvas={canvas} />\n          </DispatchContext.Provider>\n        </div>\n      </div>\n    </Base>\n  );\n};\n\nexport default Workspace;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Workspace from './components/workspace/Workspace';\n\nReactDOM.render(<Workspace />, document.getElementById('root'));\n"],"sourceRoot":""}