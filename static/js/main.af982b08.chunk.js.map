{"version":3,"sources":["components/editor/Editor.module.scss","components/catalog-item/CatalogItem.module.scss","components/catalog/Catalog.module.scss","components/layers/Layers.module.scss","components/sidebar/Sidebar.module.scss","components/canvas/Canvas.module.scss","components/placeholder/Placeholder.module.scss","components/sandbox/Sandbox.module.scss","components/editor/Editor.jsx","components/catalog-item/CatalogItem.jsx","components/catalog/Catalog.jsx","components/tree/Tree.jsx","components/layers/Layers.jsx","components/sidebar/Sidebar.jsx","react-fiber/react-fiber.js","context/DispatchContext.js","generators/workspace/workspace-generator.jsx","components/canvas/Canvas.jsx","plugins/imports.js","components/placeholder/Placeholder.jsx","reducer/initial-state/initialState.js","tree-parser/tree-parser.js","generators/example/example-generator.js","reducer/replace/replace.js","reducer/select/select.js","reducer/reducer.js","components/sandbox/Sandbox.jsx","index.jsx"],"names":["module","exports","cx","classNames","bind","styles","Editor","props","selected","className","CatalogItem","identifier","name","draggable","onDragStart","event","dataTransfer","setData","JSON","stringify","Catalog","useState","searchValue","setSearchValue","components","Object","keys","plugins","map","key","exportType","toLowerCase","indexOf","onChange","target","value","placeholder","type","Tree","root","workspace","data-terra-sandbox-root","createTree","component","depth","id","properties","nodes","style","paddingLeft","split","pop","forEach","property","push","node","Layers","container","useRef","handleMouseMove","current","height","window","innerHeight","clientY","handleMouseUp","document","body","classList","remove","documentElement","cursor","removeEventListener","ref","onMouseDown","button","addEventListener","role","Sidebar","sidebar","clientX","width","Fiber","dataset","terraSandboxRoot","fiberNode","match","return","length","find","startsWith","DispatchContext","React","createContext","WorkspaceGenerator","imports","config","importFrom","default","Component","import","undefined","generate","console","log","Canvas","dispatch","useContext","selectNearestTarget","findNearest","useEffect","Placeholder","expand","dropped","setDropped","onDragOver","preventDefault","onDragEnter","onDrop","sandboxData","getData","parse","then","dynamicImport","replacement","catch","error","initialUUID","uuidv4","initialState","parent","TreeParser","tree","replaceNode","clone","prop","ExampleGenerator","configuration","example","replace","state","action","select","reducer","Sandbox","useReducer","locale","Provider","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.af982b08.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"editor\":\"Editor_editor__2ZK6b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"catalog-item\":\"CatalogItem_catalog-item__1yJ-b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"catalog\":\"Catalog_catalog__gB0WM\",\"search\":\"Catalog_search__2Y6Ny\",\"input\":\"Catalog_input__1Hzgz\",\"components\":\"Catalog_components__xPgEm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layers\":\"Layers_layers__rrXTR\",\"resizer\":\"Layers_resizer__3c1N3\",\"inactive\":\"Layers_inactive__hyypz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__ybD5g\",\"resizer\":\"Sidebar_resizer__3_P5P\",\"inactive\":\"Sidebar_inactive__1W0Lr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"Canvas_canvas__XH7zY\",\"body\":\"Canvas_body__3F2s9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"placeholder\":\"Placeholder_placeholder__3FXn4\",\"expand\":\"Placeholder_expand__1Py8x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sandbox\":\"Sandbox_sandbox__oA_MS\",\"header\":\"Sandbox_header__3YzRS\",\"layout\":\"Sandbox_layout__625qo\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport styles from './Editor.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst propTypes = {\n  /**\n   * The identifier of the selected component.\n   */\n  selected: PropTypes.string,\n};\n\nconst Editor = (props) => {\n  const { selected } = props;\n\n  return (\n    <div className={cx('editor')}>\n      Editor Selected:\n      {' '}\n      {selected}\n    </div>\n  );\n};\n\nEditor.propTypes = propTypes;\n\nexport default Editor;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport styles from './CatalogItem.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst propTypes = {\n  /**\n   * The identifier of the component.\n   */\n  identifier: PropTypes.string,\n  /**\n   * The name of the component.\n   */\n  name: PropTypes.string,\n};\n\nconst CatalogItem = (props) => {\n  const { identifier, name } = props;\n\n  /**\n   * Handles the drag start event. Transfers component information.\n   * @param {Event} event - The drag start event.\n   */\n  const handleDragStart = (event) => {\n    event.dataTransfer.setData('terra-sandbox-data', JSON.stringify({ identifier }));\n  };\n\n  return (\n    <div className={cx('catalog-item')} draggable onDragStart={handleDragStart}>\n      {name}\n    </div>\n  );\n};\n\nCatalogItem.propTypes = propTypes;\n\nexport default CatalogItem;\n","import React, { useState } from 'react';\nimport classNames from 'classnames/bind';\nimport CatalogItem from '../catalog-item/CatalogItem';\nimport styles from './Catalog.module.scss';\nimport plugins from '../../plugins/plugins.json';\n\nconst cx = classNames.bind(styles);\n\nconst Catalog = () => {\n  const [searchValue, setSearchValue] = useState('');\n\n  /**\n   * Handles updates to the input change events.\n   * @param {Event} event - The input on change event;\n   */\n  const handleChange = (event) => {\n    setSearchValue(event.target.value.toLowerCase());\n  };\n\n  /**\n   * The filtered component list to populate the catalog.\n   */\n  const components = Object.keys(plugins).map((key) => {\n    const { name, exportType } = plugins[key];\n\n    // Subcomponents are excluded.\n    if (exportType === 'Default' && name.toLowerCase().indexOf(searchValue) > -1) {\n      return <CatalogItem key={key} identifier={key} name={name} />;\n    }\n\n    return undefined;\n  });\n\n  return (\n    <div className={cx('catalog')}>\n      <div>Components</div>\n      <div className={cx('search')}>\n        <input\n          className={cx('input')}\n          onChange={handleChange}\n          placeholder=\"Search Components\"\n          type=\"Search\"\n          value={searchValue}\n        />\n      </div>\n      <div className={cx('components')}>\n        {components}\n      </div>\n    </div>\n  );\n};\n\nexport default Catalog;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n  /**\n   * The in-progress workspace design.\n   */\n  workspace: PropTypes.object.isRequired,\n};\n\nconst Tree = (props) => {\n  const { workspace } = props;\n  const { root } = workspace;\n\n  const createTree = (component, depth = 0) => {\n    const { id, props: properties, name } = component;\n\n    // eslint-disable-next-line react/forbid-dom-props\n    const nodes = [<div key={id} style={{ paddingLeft: `${depth * 15}px` }}>{name.split(':').pop()}</div>];\n\n    Object.keys(properties).forEach((property) => {\n      const { type, value } = properties[property];\n\n      if (type === 'node') {\n        nodes.push(Object.keys(value).map((node) => createTree(value[node], depth + 1)));\n      }\n\n      if (type === 'element') {\n        nodes.push(createTree(value, depth + 1));\n      }\n    });\n\n    return nodes;\n  };\n\n  return (\n    <>\n      <div data-terra-sandbox-root>Workspace</div>\n      {Object.keys(root).map(key => createTree(root[key], 1))}\n    </>\n  );\n};\n\nTree.propTypes = propTypes;\n\nexport default Tree;\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport Tree from '../tree/Tree';\nimport styles from './Layers.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst propTypes = {\n  /**\n   * The identifier of the selected component.\n   */\n  selected: PropTypes.string,\n  /**\n   * The in-progress workspace design.\n   */\n  workspace: PropTypes.object.isRequired,\n};\n\nconst Layers = (props) => {\n  const { selected, workspace } = props;\n\n  const container = useRef();\n\n  /**\n   * Modifies the layers height as the mouse moves.\n   * @param {event} event - The mouse move event.\n   */\n  const handleMouseMove = (event) => {\n    container.current.style.height = `${window.innerHeight - event.clientY}px`;\n  };\n\n  /**\n   * Restores the window state on mouse up.\n   */\n  const handleMouseUp = () => {\n    // Re-enable user selection and pointer events.\n    document.body.classList.remove(cx('inactive'));\n    document.documentElement.style.cursor = '';\n\n    window.removeEventListener('mousemove', handleMouseMove);\n    window.removeEventListener('mouseup', handleMouseUp);\n  };\n\n  /**\n   * Initializes listeners for resizing the layers.\n   * @param {event} event - The mouse down event.\n   */\n  const handleMouseDown = (event) => {\n    // Only accept left mouse clicks.\n    if (event.button > 1) {\n      return;\n    }\n\n    document.documentElement.style.cursor = 'ns-resize';\n\n    // Disable user selection and pointer events to prevent interference during resizing.\n    document.body.className += cx('inactive');\n\n    window.addEventListener('mousemove', handleMouseMove);\n    window.addEventListener('mouseup', handleMouseUp);\n  };\n\n  return (\n    // eslint-disable-next-line react/forbid-dom-props\n    <div className={cx('layers')} ref={container}>\n      <div className={cx('header')} onMouseDown={handleMouseDown} role=\"presentation\">\n        <div className={cx('resizer')} />\n        Layers\n      </div>\n      <Tree workspace={workspace} selected={selected} />\n    </div>\n  );\n};\n\nLayers.propTypes = propTypes;\n\nexport default Layers;\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport Catalog from '../catalog/Catalog';\nimport Layers from '../layers/Layers';\nimport styles from './Sidebar.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst propTypes = {\n  /**\n   * The identifier of the selected component.\n   */\n  selected: PropTypes.string,\n  /**\n   * The in-progress workspace design.\n   */\n  workspace: PropTypes.object.isRequired,\n};\n\nconst Sidebar = (props) => {\n  const { selected, workspace } = props;\n\n  const sidebar = useRef();\n\n  /**\n   * Modifies the sidebar width as the mouse moves.\n   * @param {event} event - The mouse move event.\n   */\n  const handleMouseMove = (event) => {\n    const { clientX } = event;\n\n    sidebar.current.style.width = `${clientX}px`;\n  };\n\n  /**\n   * Restores the window state on mouse up.\n   */\n  const handleMouseUp = () => {\n    // Re-enable user selection and pointer events.\n    document.body.classList.remove(cx('inactive'));\n    document.documentElement.style.cursor = '';\n\n    window.removeEventListener('mousemove', handleMouseMove);\n    window.removeEventListener('mouseup', handleMouseUp);\n  };\n\n  /**\n   * Initializes listeners for resizing the sidebar.\n   * @param {event} event - The mouse down event.\n   */\n  const handleMouseDown = (event) => {\n    // Only accept left mouse clicks.\n    if (event.button > 1) {\n      return;\n    }\n\n    // Persists the horizontal resize cursor for the duration of the action.\n    // Without this the cursor will default back to a pointer during a resize action.\n    document.documentElement.style.cursor = 'ew-resize';\n\n    // Disable user selection and pointer events to prevent interference during resizing.\n    document.body.className += cx('inactive');\n\n    window.addEventListener('mousemove', handleMouseMove);\n    window.addEventListener('mouseup', handleMouseUp);\n  };\n\n  return (\n    // eslint-disable-next-line react/forbid-dom-props\n    <div className={cx('sidebar')} ref={sidebar}>\n      <Catalog />\n      <Layers selected={selected} workspace={workspace} />\n      <div className={cx('resizer')} onMouseDown={handleMouseDown} role=\"presentation\" />\n    </div>\n  );\n};\n\nSidebar.propTypes = propTypes;\n\nexport default Sidebar;\n","class Fiber {\n  /**\n   * Finds the nearest component to the click target.\n   * @param {DOMNode} node - The origin node.\n   * @returns {string|null} - The key of the nearest component. Null if not found.\n   */\n  static findNearest(node) {\n    if (node.dataset.terraSandboxRoot) {\n      return 'root';\n    }\n\n    let target = Fiber.fiberNode(node);\n\n    while (target && !Fiber.match(target.key)) {\n      target = target.return;\n    }\n\n    if (target) {\n      return Fiber.match(target.key);\n    }\n\n    return null;\n  }\n\n  /**\n   * Returns true if the key matches a UUID regex.\n   * @param {string} string - The string to match.\n   * @returns {string|null} - A UUID. Null if no match is found.\n   */\n  static match(key) {\n    const match = `${key}`.match(/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/);\n\n    if (match) {\n      return match[0];\n    }\n\n    return null;\n  }\n\n  /**\n   * Returns the associated fiber node of the dom element.\n   * @param {DOMNode} node - The target node.\n   * @returns {FiberNode|null} - The react internal FiberNode instance.\n   */\n  static fiberNode(node) {\n    const keys = Object.keys(node);\n\n    if (keys.length === 0) {\n      return null;\n    }\n\n    return node[keys.find((key) => key.startsWith('__reactInternalInstance$'))] || null;\n  }\n}\n\nexport default Fiber;\n","import React from 'react';\n\nconst DispatchContext = React.createContext();\n\nexport default DispatchContext;\n","import React from 'react';\nimport plugins from '../../plugins/plugins';\n\nclass WorkspaceGenerator {\n  /**\n   * Generates a workspace.\n   * @param {Object} imports - The available dynamic imports that have been loaded onto the page.\n   * @param {Object} config - The workspace configuration.\n   * @returns {ReactComponent} - A generated react component.\n   */\n  static generate(imports, config) {\n    const { root } = config;\n\n    const components = Object.keys(root).map((component) => (\n      WorkspaceGenerator.component(imports, root[component])\n    ));\n\n    return <>{components}</>;\n  }\n\n  /**\n   * Generates the component import reference.\n   * @param {Object} imports - The available dynamic imports that have been loaded onto the page.\n   * @param {Object} config - The component configuration.\n   * @returns {Object|undefined} - A reference to the import.\n   */\n  static import(imports, config) {\n    const { name } = config;\n\n    if (name === 'terra-sandbox:Placeholder') {\n      return imports[name];\n    }\n\n    const { importFrom, exportType } = plugins[name];\n\n    if (exportType === 'Default') {\n      return imports[importFrom].default;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Generates a component.\n   * @param {Object} imports - The available dynamic imports that have been loaded onto the page.\n   * @param {Object} config - The component configuration.\n   * @return {ReactComponent} - A generated react component.\n   */\n  static component(imports, config) {\n    const { id, props } = config;\n\n    const Component = WorkspaceGenerator.import(imports, config);\n    const properties = WorkspaceGenerator.properties(imports, props);\n\n    return <Component key={id} id={id} {...properties} />;\n  }\n\n  /**\n   * Generates a set of properties.\n   * @param {Object} properties - The component property configurations.\n   * @returns {Object} - A set of generated properties.\n   */\n  static properties(imports, properties) {\n    const props = {};\n\n    Object.keys(properties).forEach((property) => {\n      const value = WorkspaceGenerator.property(imports, properties[property]);\n\n      if (value !== undefined && value !== null) {\n        props[property] = value;\n      }\n    });\n\n    return props;\n  }\n\n  /**\n   * Generates a property.\n   * @param {Object} property - The property to generate.\n   * @returns {Object} - A generated property;\n   */\n  static property(imports, property) {\n    const { type, value } = property;\n\n    if (type === 'bool') {\n      return value;\n    }\n\n    if (type === 'node') {\n      return Object.keys(value).map((node) => WorkspaceGenerator.component(imports, value[node]));\n    }\n\n    if (type === 'element') {\n      return WorkspaceGenerator.generate(imports, property);\n    }\n\n    // eslint-disable-next-line no-console\n    console.log(`WARNING: Unable to interpret property. ${JSON.stringify(property)}`);\n\n    return undefined;\n  }\n}\n\nexport default WorkspaceGenerator;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport Fiber from '../../react-fiber/react-fiber';\nimport DispatchContext from '../../context/DispatchContext';\nimport WorkspaceGenerator from '../../generators/workspace/workspace-generator';\nimport styles from './Canvas.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst propTypes = {\n  /**\n   * The in-progress workspace design.\n   */\n  workspace: PropTypes.object.isRequired,\n  /**\n   * The available dynamic imports that have been loaded onto the page.\n   */\n  imports: PropTypes.object.isRequired,\n};\n\nconst Canvas = (props) => {\n  const { imports, workspace } = props;\n\n  const dispatch = useContext(DispatchContext);\n\n  /**\n   * Selects the nearest component from the origin of the click event.\n   * @param {Event} event - The click event.\n   */\n  function selectNearestTarget(event) {\n    const id = Fiber.findNearest(event.target);\n\n    if (id) {\n      dispatch({ id, type: 'select' });\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', selectNearestTarget);\n\n    return () => {\n      window.removeEventListener('click', selectNearestTarget);\n    };\n  });\n\n  return (\n    <div className={cx('canvas')}>\n      <div className={cx('body')} data-terra-sandbox-root>\n        {WorkspaceGenerator.generate(imports, workspace)}\n      </div>\n    </div>\n  );\n};\n\nCanvas.propTypes = propTypes;\n\nexport default Canvas;\n","export default {\n  'terra-card': () => import('terra-card'),\n  'terra-list': () => import('terra-list'),\n  'terra-overlay': () => import('terra-overlay'),\n};\n","import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport DispatchContext from '../../context/DispatchContext';\nimport plugins from '../../plugins/plugins';\nimport imports from '../../plugins/imports';\nimport styles from './Placeholder.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst propTypes = {\n  /**\n   * The placeholder identifier.\n   */\n  id: PropTypes.string.isRequired,\n  /**\n   * Whether or not the placeholder should expand to fill the available space.\n   */\n  expand: PropTypes.bool,\n};\n\nconst Placeholder = (props) => {\n  const { id, expand } = props;\n  const [dropped, setDropped] = useState('Drop Zone');\n\n  const dispatch = useContext(DispatchContext);\n\n  /**\n   * Handles the drag over event.\n   * @param {Event} event - The drag over event.\n   */\n  const handleDragover = (event) => {\n    event.preventDefault();\n  };\n\n  /**\n   * Handles the drag enter event.\n   * @param {Event} event - The drag enter event.\n   */\n  const handleDragenter = (event) => {\n    event.preventDefault();\n  };\n\n  /**\n   * Handles the drop event.\n   * @param {Event} event - The drop event.\n   */\n  const handleDrop = (event) => {\n    const sandboxData = event.dataTransfer.getData('terra-sandbox-data');\n\n    if (sandboxData) {\n      const { identifier } = JSON.parse(sandboxData);\n      const { importFrom } = plugins[identifier];\n\n      imports[importFrom]().then((dynamicImport) => {\n        dispatch({\n          id,\n          dynamicImport,\n          type: 'replace',\n          replacement: identifier,\n        });\n      }).catch((error) => {\n        // eslint-disable-next-line no-console\n        console.log(error);\n        setDropped('Whoops, something went wrong');\n      });\n    }\n  };\n\n  return (\n    <div\n      id={id}\n      className={cx('placeholder', { expand })}\n      onDragOver={handleDragover}\n      onDragEnter={handleDragenter}\n      onDrop={handleDrop}\n    >\n      {dropped}\n    </div>\n  );\n};\n\nPlaceholder.propTypes = propTypes;\n\nexport default Placeholder;\n","import uuidv4 from 'uuid/v4';\nimport Placeholder from '../../components/placeholder/Placeholder';\n\nconst initialUUID = uuidv4();\n\nconst initialState = {\n  imports: {\n    'terra-sandbox:Placeholder': Placeholder,\n  },\n  selected: undefined,\n  workspace: {\n    root: {\n      [initialUUID]: {\n        id: initialUUID,\n        parent: 'root',\n        name: 'terra-sandbox:Placeholder',\n        type: 'element',\n        props: {\n          expand: {\n            type: 'bool',\n            value: true,\n          },\n        },\n      },\n    },\n  },\n};\n\nexport default initialState;\n","import uuidv4 from 'uuid/v4';\n\nclass TreeParser {\n  /**\n   * Replaces a target within the tree.\n   * @param {Object} root - The root of the tree.\n   * @param {string} target - The target identifier.\n   * @param {Object} replacement - The replacement node.\n   */\n  static replace(root, target, replacement) {\n    const tree = {};\n\n    Object.keys(root).forEach((node) => {\n      tree[node] = TreeParser.replaceNode(root[node], target, replacement);\n    });\n\n    return { root: tree };\n  }\n\n  /**\n   * Replaces a node within a tree.\n   * @param {Object} node - The current node.\n   * @param {string} target - The target identifier.\n   * @param {Object} replacement - The replacement node.\n   */\n  static replaceNode(node, target, replacement) {\n    const { id, parent, props } = node;\n\n    if (id === target) {\n      return TreeParser.clone(replacement, parent, id);\n    }\n\n    const properties = {};\n\n    Object.keys(props).forEach((property) => {\n      const { type, value } = props[property];\n\n      if (type === 'element') {\n        properties[property] = { type, value: TreeParser.replaceNode(value, target, replacement) };\n      } else if (type === 'node') {\n        const nodes = {};\n\n        Object.keys(value).forEach((key) => {\n          nodes[key] = TreeParser.replaceNode(value[key], target, replacement);\n        });\n\n        properties[property] = { type, value: nodes };\n      } else {\n        properties[property] = props[property];\n      }\n    });\n\n    return { ...node, props: properties };\n  }\n\n  /**\n   * Clones a provided node.\n   * @param {Object} node - The node to clone.\n   * @param {string} parent - Optional parent identifier to assign the node.\n   * @param {string} identifier - Optional identifier to assign the node.\n   */\n  static clone(node, parent, identifier) {\n    const id = identifier || uuidv4();\n\n    const { name, props } = node;\n\n    const properties = {};\n\n    Object.keys(props).forEach((prop) => {\n      const { type, value } = props[prop];\n\n      if (type === 'element') {\n        properties[prop] = { type, value: TreeParser.clone(value, id) };\n      } else if (type === 'node') {\n        const nodes = {};\n\n        Object.keys(value).forEach((key) => {\n          nodes[key] = TreeParser.clone(value[key], id);\n        });\n\n        properties[prop] = { type, value: nodes };\n      } else {\n        properties[prop] = props[prop];\n      }\n    });\n\n    return {\n      id,\n      name,\n      parent,\n      type: 'element',\n      props: properties,\n    };\n  }\n}\n\nexport default TreeParser;\n","import uuidv4 from 'uuid/v4';\nimport plugins from '../../plugins/plugins';\n\nclass ExampleGenerator {\n  /**\n   * Generates an example for a component.\n   * @param {string} name - The component name.\n   * @param {string} id - An optional component identifier.\n   * @param {string} parent - An optional parent identifier.\n   * @returns {Object} - A generated react component represented as an object.\n   */\n  static generate(name, id, parent) {\n    const identifier = id || uuidv4();\n    const { props } = ExampleGenerator.configuration(name);\n\n    return {\n      id: identifier,\n      parent,\n      name,\n      type: 'element',\n      props: ExampleGenerator.properties(identifier, props),\n    };\n  }\n\n  /**\n   * Fetches the component configuration object.\n   * @param {string} name - The component name.\n   * @returns {Object} - The component configuration.\n   */\n  static configuration(name) {\n    if (name === 'terra-sandbox:Placeholder') {\n      return { props: { expand: { type: 'bool' } } };\n    }\n\n    return plugins[name];\n  }\n\n  /**\n   * Generates the example properties.\n   * @param {string} id - The component identifier.\n   * @param {Object} properties - The component properties.\n   * @returns {Object} - The component properties.\n   */\n  static properties(id, properties) {\n    const props = {};\n\n    Object.keys(properties).forEach((property) => {\n      const value = ExampleGenerator.property(id, properties[property]);\n\n      if (value !== undefined && value !== null) {\n        props[property] = value;\n      }\n    });\n\n    return props;\n  }\n\n  /**\n   * Generates an example property.\n   * @param {string} id - The component identifier.\n   * @param {Object} property - The property to generate.\n   * @returns {Object} - A generated property.\n   */\n  static property(id, property) {\n    const { type } = property;\n\n    if (type === 'element') {\n      return ExampleGenerator.generate('terra-sandbox:Placeholder', null, id);\n    }\n\n    if (type === 'node') {\n      const example = ExampleGenerator.generate('terra-sandbox:Placeholder', null, id);\n\n      return { type: 'node', value: { [example.id]: example } };\n    }\n\n    return undefined;\n  }\n}\n\nexport default ExampleGenerator;\n","import plugins from '../../plugins/plugins';\nimport TreeParser from '../../tree-parser/tree-parser';\nimport ExampleGenerator from '../../generators/example/example-generator';\n\n/**\n * Replaces a component with another component.\n * @param {Object} state - The current application state.\n * @param {Object} action - The dispatched action.\n */\nconst replace = (state, action) => {\n  const { imports, workspace } = state;\n  const { root } = workspace;\n  const { id, replacement, dynamicImport } = action;\n\n  // Preserve the existing ID for replacements.\n  const component = ExampleGenerator.generate(replacement, id);\n  const tree = TreeParser.replace(root, id, component);\n\n  // Replace actions may optionally introduce a new dynamic import.\n  if (dynamicImport) {\n    const { importFrom } = plugins[replacement];\n    imports[importFrom] = dynamicImport;\n  }\n\n  return { ...state, imports, workspace: tree };\n};\n\nexport default replace;\n","/**\n * Selects a component.\n * @param {Object} state - The current application state.\n * @param {Object} action - The dispatched action.\n */\nconst select = (state, action) => {\n  const { id } = action;\n\n  return { ...state, selected: id };\n};\n\nexport default select;\n","import initialState from './initial-state/initialState';\nimport replace from './replace/replace';\nimport select from './select/select';\n\nconst reducer = (state, action) => {\n  const { type } = action;\n\n  switch (type) {\n    case 'replace':\n      return replace(state, action);\n    case 'select':\n      return select(state, action);\n    default:\n      // eslint-disable-next-line no-console\n      console.log('WARNING: No reducer action was specified.');\n      return state;\n  }\n};\n\nexport default reducer;\nexport { initialState };\n","import React, { useReducer } from 'react';\nimport Base from 'terra-base';\nimport classNames from 'classnames/bind';\nimport Editor from '../editor/Editor';\nimport Sidebar from '../sidebar/Sidebar';\nimport Canvas from '../canvas/Canvas';\nimport DispatchContext from '../../context/DispatchContext';\nimport reducer, { initialState } from '../../reducer/reducer';\n\nimport styles from './Sandbox.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst Sandbox = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { imports, selected, workspace } = state;\n\n  return (\n    <Base locale=\"en\">\n      <div className={cx('sandbox')}>\n        <div className={cx('header')}>\n          Header\n        </div>\n        <div className={cx('layout')}>\n          <DispatchContext.Provider value={dispatch}>\n            <Sidebar selected={selected} workspace={workspace} />\n            <Canvas imports={imports} workspace={workspace} />\n            <Editor selected={selected} workspace={workspace} />\n          </DispatchContext.Provider>\n        </div>\n      </div>\n    </Base>\n  );\n};\n\nexport default Sandbox;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Sandbox from './components/sandbox/Sandbox';\n\nReactDOM.render(<Sandbox />, document.getElementById('root'));\n"],"sourceRoot":""}